// Applies across android app modules: {app, app-tv}
apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file('keystore.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.canRead()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

// Increments versionCode by ABI type
def abiCodeMap = ['armeabi-v7a': '1', 'arm64-v8a': '2', 'x86': '4', 'x86_64': '5']

android {
    signingConfigs {
        release {
            if (!keystoreProperties.stringPropertyNames().isEmpty()) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            multiDexEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            universalApk true
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'InvalidPackage'
        htmlReport true
        lintConfig file('../lint.xml')
        textReport false
        xmlReport false
    }

    packagingOptions {
        resources {
            exclude 'META-INF/androidx.localbroadcastmanager_localbroadcastmanager.version'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def baseVersionCode = abiCodeMap.get(output.getFilter('ABI'))
            if(baseVersionCode != null) {
                output.versionCodeOverride = Integer.valueOf(variant.versionCode) + Integer.valueOf(baseVersionCode)
            }
        }
    }
}